typedef int(*tf_AFCErrnoToAFCError)(int err, char **msg);
typedef void(*tf_AMDeviceRelease)(void* device);
typedef void(*tf_AMDeviceRetain)(void* device);
typedef mach_error_t(*tf_AFCConnectionClose)(void* conn);
typedef afc_error_t(*tf_AFCConnectionOpen)(void* handle, unsigned int io_timeout, void* conn);
typedef afc_error_t(*tf_AFCDirectoryCreate)(void* conn, const char *dirname);
typedef afc_error_t(*tf_AFCFileInfoOpen)(void *conn, const char *path, void *info);
typedef int(*tf_AFCFileRefClose)(void* hAFC, INT64 handle);
typedef afc_error_t(*tf_AFCFileRefOpen)(void* conn, const char *path, unsigned long long mode, void *ref);
typedef int(*tf_AFCFileRefRead)(void* hAFC, INT64 handle, void *buffer, UINT32 *len);
typedef afc_error_t(*tf_AFCFileRefSeek)(void* conn, void* ref, unsigned long long offset1, unsigned long long offset2);
typedef int(*tf_AFCFileRefTell)(void* hAFC, INT64 handle, long *position);
typedef int(*tf_AFCFlushData)(void* hAFC, INT64 handle);
typedef int(*tf_AFCKeyValueClose)(void* val);
typedef int(*tf_AFCKeyValueRead)(void *data, void* key, void* val);
typedef mach_error_t(*tf_AMDeviceConnect)(void* device);
typedef int(*tf_AMDeviceCopyDeviceIdentifier)(void* device);
typedef int(*tf_AMDeviceCopyValue)(void* device, unsigned int unknown, void* cfString);
typedef int(*tf_AMDeviceCreateHouseArrestService)(void* unknown1, void* unknown2);
typedef int(*tf_AMDeviceCreateWakeupToken)(void* device);
typedef mach_error_t(*tf_AMDeviceDisconnect)(void* device);
typedef mach_error_t(*tf_AMDeviceGetConnectionID)(void* device);
typedef UINT32(*tf_AMDeviceGetInterfaceType)(void* device);
typedef mach_error_t(*tf_AMDeviceGetWirelessBuddyFlags)(void* device, long* flags);
typedef int(*tf_AMDeviceIsPaired)(void* device);
typedef int(*tf_AMDeviceLookupApplications)(void* device, int zero, void* result);
typedef mach_error_t(*tf_AMDeviceNotificationSubscribe)(void* callback, void* unused1, void* unused2, void* unused3, void* am_device_notification_ptr);
typedef mach_error_t(*tf_AMDeviceSetWirelessBuddyFlags)(void* device, long flags);
typedef mach_error_t(*tf_AMDeviceStartHouseArrestService)(void* *device, void* identifier, void *unknown, void* handle, unsigned int *what);
typedef mach_error_t(*tf_AMDeviceStartService)(void* device, void* service_name, int* socket_fd);
typedef mach_error_t(*tf_AMDeviceStartServiceWithOptions)(void* device, void* service_name, void* options, int* socket);
typedef mach_error_t(*tf_AMDeviceStartSession)(void* device);
typedef mach_error_t(*tf_AMDeviceStopSession)(void* device);
typedef int(*tf_AMDeviceTransferApplication)(int socket_fd, void* path, void* options, void *callback, int callback_arg);
typedef int(*tf_AMDeviceTransferPath)(int unknown0, void *device, void* url, void* options, void *callback, int callback_arg);
typedef int(*tf_AMDeviceUninstallApplication)(int installFd, void* bundleId, void* options, void* callback, void *callback_arg);
typedef mach_error_t(*tf_AMDeviceUnpair)(void* device);
typedef mach_error_t(*tf_AMDeviceUpgradeApplication)(int unknown1, void* path, void* options, void* unknown2);
typedef mach_error_t(*tf_AMDeviceValidatePairing)(void* device);
typedef mach_error_t(*tf_AFCLockCreate)();
typedef mach_error_t(*tf_AFCLockFree)();
typedef mach_error_t(*tf_AFCLockLock)();
typedef mach_error_t(*tf_AFCLockTryLock)();
typedef mach_error_t(*tf_AFCLockUnlock)();
typedef mach_error_t(*tf_AFCStringCopy)();
typedef mach_error_t(*tf_AMSAddAppleSearchPathsToEnvironmentFromReg)();
typedef mach_error_t(*tf_MISProfileCopyPayload)();
typedef mach_error_t(*tf_MISProfileCopySignerSubjectSummary)();
typedef mach_error_t(*tf_MISProfileCreateDataRepresentation)();
typedef mach_error_t(*tf_MISProfileCreateWithData)();
typedef mach_error_t(*tf_MISProfileCreateWithFile)();
typedef mach_error_t(*tf_MISProfileGetValue)();
typedef mach_error_t(*tf_MISProfileIsMutable)();
typedef mach_error_t(*tf_MISProfileValidateSignature)();
typedef mach_error_t(*tf_MISProfileValidateSignatureWithAnchors)();
typedef mach_error_t(*tf_MISProfileWriteToFile)();
typedef mach_error_t(*tf_MISProvisioningProfileCheckValidity)();
typedef mach_error_t(*tf_MISProvisioningProfileGetCreationDate)();
typedef mach_error_t(*tf_MISProvisioningProfileGetDeveloperCertificates)();
typedef mach_error_t(*tf_MISProvisioningProfileGetExpirationDate)();
typedef mach_error_t(*tf_MISProvisioningProfileGetName)();
typedef mach_error_t(*tf_MISProvisioningProfileGetProvisionedDevices)();
typedef mach_error_t(*tf_MISProvisioningProfileGetUUID)();
typedef mach_error_t(*tf_MISProvisioningProfileGetVersion)();
typedef mach_error_t(*tf_MISProvisioningProfileIncludesDevice)();
typedef mach_error_t(*tf_MISProvisioningProfileProvisionsAllDevices)();
typedef mach_error_t(*tf_MISProvisioningProfileValidateSignature)();
typedef mach_error_t(*tf_USBMuxListenForDevices)();
typedef mach_error_t(*tf_AFCConnectionCopyLastErrorInfo)();
typedef mach_error_t(*tf_AFCConnectionCreate)();
typedef mach_error_t(*tf_AFCConnectionGetContext)();
typedef mach_error_t(*tf_AFCConnectionGetFSBlockSize)();
typedef mach_error_t(*tf_AFCConnectionGetIOTimeout)();
typedef mach_error_t(*tf_AFCConnectionGetSecureContext)();
typedef mach_error_t(*tf_AFCConnectionGetSocketBlockSize)();
typedef mach_error_t(*tf_AFCConnectionGetStatus)();
typedef mach_error_t(*tf_AFCConnectionGetTypeID)();
typedef mach_error_t(*tf_AFCConnectionInvalidate)();
typedef mach_error_t(*tf_AFCConnectionIsValid)();
typedef mach_error_t(*tf_AFCConnectionProcessOperation)();
typedef mach_error_t(*tf_AFCConnectionProcessOperations)();
typedef mach_error_t(*tf_AFCConnectionScheduleWithRunLoop)();
typedef mach_error_t(*tf_AFCConnectionSetCallBack)();
typedef mach_error_t(*tf_AFCConnectionSetContext)();
typedef mach_error_t(*tf_AFCConnectionSetDisposeSecureContextOnInvalidate)();
typedef mach_error_t(*tf_AFCConnectionSetFSBlockSize)();
typedef mach_error_t(*tf_AFCConnectionSetFatalError)();
typedef mach_error_t(*tf_AFCConnectionSetIOTimeout)();
typedef mach_error_t(*tf_AFCConnectionSetSecureContext)();
typedef mach_error_t(*tf_AFCConnectionSetSocketBlockSize)();
typedef mach_error_t(*tf_AFCConnectionSubmitOperation)();
typedef mach_error_t(*tf_AFCConnectionUnscheduleFromRunLoop)();
typedef mach_error_t(*tf_AFCCopyErrorString)();
typedef mach_error_t(*tf_AFCCopyPacketTypeString)();
typedef mach_error_t(*tf_AFCDeviceInfoOpen)();
typedef mach_error_t(*tf_AFCDirectoryClose)();
typedef mach_error_t(*tf_AFCDirectoryOpen)();
typedef mach_error_t(*tf_AFCDirectoryRead)();
typedef mach_error_t(*tf_AFCDiscardBodyData)();
typedef mach_error_t(*tf_AFCDiscardData)();
typedef mach_error_t(*tf_AFCFileDescriptorCreateCloseOperation)();
typedef mach_error_t(*tf_AFCFileDescriptorCreateGetPositionOperation)();
typedef mach_error_t(*tf_AFCFileDescriptorCreateLockOperation)();
typedef mach_error_t(*tf_AFCFileDescriptorCreateReadAtPositionOperation)();
typedef mach_error_t(*tf_AFCFileDescriptorCreateReadOperation)();
typedef mach_error_t(*tf_AFCFileDescriptorCreateSetImmutableHintOperation)();
typedef mach_error_t(*tf_AFCFileDescriptorCreateSetPositionOperation)();
typedef mach_error_t(*tf_AFCFileDescriptorCreateSetSizeOperation)();
typedef mach_error_t(*tf_AFCFileDescriptorCreateUnlockOperation)();
typedef mach_error_t(*tf_AFCFileDescriptorCreateWriteAtPositionOperation)();
typedef mach_error_t(*tf_AFCFileDescriptorCreateWriteOperation)();
typedef mach_error_t(*tf_AFCFileDescriptorGetTypeID)();
typedef mach_error_t(*tf_AFCFileDescriptorInvalidate)();
typedef mach_error_t(*tf_AFCFileDescriptorIsValid)();
typedef mach_error_t(*tf_AFCFileRefLock)();
typedef mach_error_t(*tf_AFCFileRefSetFileSize)();
typedef mach_error_t(*tf_AFCFileRefUnlock)();
typedef mach_error_t(*tf_AFCFileRefWrite)();
typedef mach_error_t(*tf_AFCGetClientVersionString)();
typedef mach_error_t(*tf_AFCLinkPath)();
typedef mach_error_t(*tf_AFCOperationCopyPacketData)();
typedef mach_error_t(*tf_AFCOperationCreateGetConnectionInfo)();
typedef mach_error_t(*tf_AFCOperationCreateGetDeviceInfo)();
typedef mach_error_t(*tf_AFCOperationCreateGetFileHash)();
typedef mach_error_t(*tf_AFCOperationCreateGetFileHashWithRange)();
typedef mach_error_t(*tf_AFCOperationCreateGetFileInfo)();
typedef mach_error_t(*tf_AFCOperationCreateGetSizeOfPathContents)();
typedef mach_error_t(*tf_AFCOperationCreateLinkPath)();
typedef mach_error_t(*tf_AFCOperationCreateMakeDirectory)();
typedef mach_error_t(*tf_AFCOperationCreateOpenFile)();
typedef mach_error_t(*tf_AFCOperationCreatePacketHeaderDictionary)();
typedef mach_error_t(*tf_AFCOperationCreateReadDirectory)();
typedef mach_error_t(*tf_AFCOperationCreateRemovePath)();
typedef mach_error_t(*tf_AFCOperationCreateRemovePathAndContents)();
typedef mach_error_t(*tf_AFCOperationCreateRenamePath)();
typedef mach_error_t(*tf_AFCOperationCreateSetConnectionOptions)();
typedef mach_error_t(*tf_AFCOperationCreateSetModTime)();
typedef mach_error_t(*tf_AFCOperationGetContext)();
typedef mach_error_t(*tf_AFCOperationGetResultObject)();
typedef mach_error_t(*tf_AFCOperationGetResultStatus)();
typedef mach_error_t(*tf_AFCOperationGetState)();
typedef mach_error_t(*tf_AFCOperationGetTypeID)();
typedef mach_error_t(*tf_AFCOperationSetContext)();
typedef mach_error_t(*tf_AFCReadData)();
typedef mach_error_t(*tf_AFCReadPacket)();
typedef mach_error_t(*tf_AFCReadPacketBody)();
typedef mach_error_t(*tf_AFCReadPacketHeader)();
typedef mach_error_t(*tf_AFCRemovePath)();
typedef mach_error_t(*tf_AFCRenamePath)();
typedef mach_error_t(*tf_AFCSendData)();
typedef mach_error_t(*tf_AFCSendDataPacket)();
typedef mach_error_t(*tf_AFCSendHeader)();
typedef mach_error_t(*tf_AFCSendPacket)();
typedef mach_error_t(*tf_AFCSendStatus)();
typedef mach_error_t(*tf_AFCValidateHeader)();
typedef mach_error_t(*tf_AMDCopyArrayOfDevicesMatchingQuery)();
typedef mach_error_t(*tf_AMDCopyAuthenticationIdentityForDevice)();
typedef mach_error_t(*tf_AMDCopyErrorText)();
typedef mach_error_t(*tf_AMDCopySystemBonjourUniqueID)();
typedef mach_error_t(*tf_AMDFUModeDeviceCopyAuthInstallPreflightOptions)();
typedef mach_error_t(*tf_AMDFUModeDeviceCopyBoardConfig)();
typedef mach_error_t(*tf_AMDFUModeDeviceGetBoardID)();
typedef mach_error_t(*tf_AMDFUModeDeviceGetChipID)();
typedef mach_error_t(*tf_AMDFUModeDeviceGetECID)();
typedef mach_error_t(*tf_AMDFUModeDeviceGetLocationID)();
typedef mach_error_t(*tf_AMDFUModeDeviceGetProductID)();
typedef mach_error_t(*tf_AMDFUModeDeviceGetProductType)();
typedef mach_error_t(*tf_AMDFUModeDeviceGetProductionMode)();
typedef mach_error_t(*tf_AMDFUModeDeviceGetProgress)();
typedef mach_error_t(*tf_AMDFUModeDeviceGetSecurityDomain)();
typedef mach_error_t(*tf_AMDFUModeDeviceGetSecurityEpoch)();
typedef mach_error_t(*tf_AMDFUModeDeviceGetTypeID)();
typedef mach_error_t(*tf_AMDFUModeDeviceIsBootstrapOnly)();
typedef mach_error_t(*tf_AMDFUModeDeviceRequestAbbreviatedSendSync)();
typedef mach_error_t(*tf_AMDGetPairingRecordDirectoryPath)();
typedef mach_error_t(*tf_AMDListenForNotifications)();
typedef mach_error_t(*tf_AMDObserveNotification)();
typedef mach_error_t(*tf_AMDPostNotification)();
typedef mach_error_t(*tf_AMDSecureListenForNotifications)();
typedef mach_error_t(*tf_AMDSecureObserveNotification)();
typedef mach_error_t(*tf_AMDSecurePostNotification)();
typedef mach_error_t(*tf_AMDSecureShutdownNotificationProxy)();
typedef mach_error_t(*tf_AMDServiceConnectionCreate)();
typedef mach_error_t(*tf_AMDServiceConnectionGetSecureIOContext)();
typedef mach_error_t(*tf_AMDServiceConnectionGetSocket)();
typedef mach_error_t(*tf_AMDServiceConnectionGetTypeID)();
typedef mach_error_t(*tf_AMDServiceConnectionInvalidate)();
typedef mach_error_t(*tf_AMDServiceConnectionReceive)();
typedef mach_error_t(*tf_AMDServiceConnectionReceiveMessage)();
typedef mach_error_t(*tf_AMDServiceConnectionSend)();
typedef mach_error_t(*tf_AMDServiceConnectionSendMessage)();
typedef mach_error_t(*tf_AMDSetLogLevel)();
typedef mach_error_t(*tf_AMDShutdownNotificationProxy)();
typedef mach_error_t(*tf_AMDeviceActivate)();
typedef mach_error_t(*tf_AMDeviceArchiveApplication)();
typedef mach_error_t(*tf_AMDeviceCheckCapabilitiesMatch)();
typedef mach_error_t(*tf_AMDeviceCopyAuthInstallPreflightOptions)();
typedef mach_error_t(*tf_AMDeviceCopyDeviceLocation)();
typedef mach_error_t(*tf_AMDeviceCopyProvisioningProfiles)();
typedef mach_error_t(*tf_AMDeviceCopyValueWithError)();
typedef mach_error_t(*tf_AMDeviceDeactivate)();
typedef mach_error_t(*tf_AMDeviceEnterRecovery)();
typedef mach_error_t(*tf_AMDeviceExtendedPairWithOptions)();
typedef mach_error_t(*tf_AMDeviceGetInterfaceSpeed)();
typedef mach_error_t(*tf_AMDeviceGetTypeID)();
typedef mach_error_t(*tf_AMDeviceGetUserInfo)();
typedef mach_error_t(*tf_AMDeviceInstallApplication)();
typedef mach_error_t(*tf_AMDeviceInstallProvisioningProfile)();
typedef mach_error_t(*tf_AMDeviceIsValid)();
typedef mach_error_t(*tf_AMDeviceLookupApplicationArchives)();
typedef mach_error_t(*tf_AMDeviceNotificationUnsubscribe)();
typedef mach_error_t(*tf_AMDevicePair)();
typedef mach_error_t(*tf_AMDevicePairWithOptions)();
typedef mach_error_t(*tf_AMDevicePowerAssertionCreate)();
typedef mach_error_t(*tf_AMDevicePowerAssertionGetTypeID)();
typedef mach_error_t(*tf_AMDevicePreflightOperationCreate)();
typedef mach_error_t(*tf_AMDevicePreflightOperationGetRunLoopSource)();
typedef mach_error_t(*tf_AMDevicePreflightOperationGetTypeID)();
typedef mach_error_t(*tf_AMDevicePreflightOperationInvalidate)();
typedef mach_error_t(*tf_AMDeviceRemoveApplicationArchive)();
typedef mach_error_t(*tf_AMDeviceRemoveProvisioningProfile)();
typedef mach_error_t(*tf_AMDeviceRemoveValue)();
typedef mach_error_t(*tf_AMDeviceRequestAbbreviatedSendSync)();
typedef mach_error_t(*tf_AMDeviceRestoreApplication)();
typedef mach_error_t(*tf_AMDeviceSecureArchiveApplication)();
typedef mach_error_t(*tf_AMDeviceSecureCheckCapabilitiesMatch)();
typedef mach_error_t(*tf_AMDeviceSecureInstallApplication)();
typedef mach_error_t(*tf_AMDeviceSecureRemoveApplicationArchive)();
typedef mach_error_t(*tf_AMDeviceSecureRestoreApplication)();
typedef mach_error_t(*tf_AMDeviceSecureStartService)();
typedef mach_error_t(*tf_AMDeviceSecureTransferPath)();
typedef mach_error_t(*tf_AMDeviceSecureUninstallApplication)();
typedef mach_error_t(*tf_AMDeviceSecureUpgradeApplication)();
typedef mach_error_t(*tf_AMDeviceSetUserInfo)();
typedef mach_error_t(*tf_AMDeviceSetValue)();
typedef mach_error_t(*tf_AMDeviceWakeupOperationCreateWithToken)();
typedef mach_error_t(*tf_AMDeviceWakeupOperationGetTypeID)();
typedef mach_error_t(*tf_AMDeviceWakeupOperationInvalidate)();
typedef mach_error_t(*tf_AMDeviceWakeupOperationSchedule)();
typedef mach_error_t(*tf_AMDeviceWakeupUsingToken)();
typedef mach_error_t(*tf_AMRAuthInstallCopyLocalizedStringForServerError)();
typedef mach_error_t(*tf_AMRAuthInstallCopyPreflightOptions)();
typedef mach_error_t(*tf_AMRAuthInstallFinalize)();
typedef mach_error_t(*tf_AMRAuthInstallPreflight)();
typedef mach_error_t(*tf_AMRAuthInstallRegisterProxyCredentialsCallback)();
typedef mach_error_t(*tf_AMRLog)();
typedef mach_error_t(*tf_AMRLogv)();
typedef mach_error_t(*tf_AMRecoveryModeDeviceCopyAuthInstallPreflightOptions)();
typedef mach_error_t(*tf_AMRecoveryModeDeviceCopyBoardConfig)();
typedef mach_error_t(*tf_AMRecoveryModeDeviceCopyEnvironmentVariableFromDevice)();
typedef mach_error_t(*tf_AMRecoveryModeDeviceCopyIMEI)();
typedef mach_error_t(*tf_AMRecoveryModeDeviceCopySerialNumber)();
typedef mach_error_t(*tf_AMRecoveryModeDeviceGetBoardID)();
typedef mach_error_t(*tf_AMRecoveryModeDeviceGetChipID)();
typedef mach_error_t(*tf_AMRecoveryModeDeviceGetECID)();
typedef mach_error_t(*tf_AMRecoveryModeDeviceGetLocationID)();
typedef mach_error_t(*tf_AMRecoveryModeDeviceGetProductID)();
typedef mach_error_t(*tf_AMRecoveryModeDeviceGetProductType)();
typedef mach_error_t(*tf_AMRecoveryModeDeviceGetProductionMode)();
typedef mach_error_t(*tf_AMRecoveryModeDeviceGetProgress)();
typedef mach_error_t(*tf_AMRecoveryModeDeviceGetSecurityDomain)();
typedef mach_error_t(*tf_AMRecoveryModeDeviceGetSecurityEpoch)();
typedef mach_error_t(*tf_AMRecoveryModeDeviceGetTypeID)();
typedef mach_error_t(*tf_AMRecoveryModeDeviceIsBootstrapOnly)();
typedef mach_error_t(*tf_AMRecoveryModeDeviceReboot)();
typedef mach_error_t(*tf_AMRecoveryModeDeviceRequestAbbreviatedSendSync)();
typedef mach_error_t(*tf_AMRecoveryModeDeviceSendBlindCommandToDevice)();
typedef mach_error_t(*tf_AMRecoveryModeDeviceSendCommandToDevice)();
typedef mach_error_t(*tf_AMRecoveryModeDeviceSendFileToDevice)();
typedef mach_error_t(*tf_AMRecoveryModeDeviceSetAutoBoot)();
typedef mach_error_t(*tf_AMRecoveryModeGetSoftwareBuildVersion)();
typedef mach_error_t(*tf_AMRestorableBuildCopyRestoreBundleURL)();
typedef mach_error_t(*tf_AMRestorableBuildCopySupportedBoardConfigs)();
typedef mach_error_t(*tf_AMRestorableBuildCopySupportedVariants)();
typedef mach_error_t(*tf_AMRestorableBuildCreate)();
typedef mach_error_t(*tf_AMRestorableCommitStashBag)();
typedef mach_error_t(*tf_AMRestorableDeviceCopyAMDevice)();
typedef mach_error_t(*tf_AMRestorableDeviceCopyAuthInstallPreflightOptions)();
typedef mach_error_t(*tf_AMRestorableDeviceCopyBoardConfig)();
typedef mach_error_t(*tf_AMRestorableDeviceCopyDFUModeDevice)();
typedef mach_error_t(*tf_AMRestorableDeviceCopyDefaultRestoreOptions)();
typedef mach_error_t(*tf_AMRestorableDeviceCopyRecoveryModeDevice)();
typedef mach_error_t(*tf_AMRestorableDeviceCopyRestoreModeDevice)();
typedef mach_error_t(*tf_AMRestorableDeviceCopyRestoreOptionsFromDocument)();
typedef mach_error_t(*tf_AMRestorableDeviceCopySerialDevicePath)();
typedef mach_error_t(*tf_AMRestorableDeviceCopySerialNumber)();
typedef mach_error_t(*tf_AMRestorableDeviceCreateFromAMDevice)();
typedef mach_error_t(*tf_AMRestorableDeviceEnableExtraDFUDevices)();
typedef mach_error_t(*tf_AMRestorableDeviceGetDFUModeDevice)();
typedef mach_error_t(*tf_AMRestorableDeviceGetECID)();
typedef mach_error_t(*tf_AMRestorableDeviceGetFusingInfo)();
typedef mach_error_t(*tf_AMRestorableDeviceGetLocationID)();
typedef mach_error_t(*tf_AMRestorableDeviceGetProductID)();
typedef mach_error_t(*tf_AMRestorableDeviceGetProductType)();
typedef mach_error_t(*tf_AMRestorableDeviceGetRecoveryModeDevice)();
typedef mach_error_t(*tf_AMRestorableDeviceGetState)();
typedef mach_error_t(*tf_AMRestorableDeviceRegisterForNotifications)();
typedef mach_error_t(*tf_AMRestorableDeviceRestore)();
typedef mach_error_t(*tf_AMRestorableDeviceSendBlindCommand)();
typedef mach_error_t(*tf_AMRestorableDeviceSendCommand)();
typedef mach_error_t(*tf_AMRestorableDeviceSendFile)();
typedef mach_error_t(*tf_AMRestorableDeviceSetLogFileURL)();
typedef mach_error_t(*tf_AMRestorableDeviceSetProxyCredentialsCallback)();
typedef mach_error_t(*tf_AMRestorableDeviceUnregisterForNotifications)();
typedef mach_error_t(*tf_AMRestorableEnableLogStreaming)();
typedef mach_error_t(*tf_AMRestorableGetIdentifyingErrorCode)();
typedef mach_error_t(*tf_AMRestorableLogToFile)();
typedef mach_error_t(*tf_AMRestorablePersonalizeCopyManifestTag)();
typedef mach_error_t(*tf_AMRestorablePersonalizeSendFile)();
typedef mach_error_t(*tf_AMRestorableSetGlobalLocationIDFilter)();
typedef mach_error_t(*tf_AMRestorableSetGlobalLogFileURL)();
typedef mach_error_t(*tf_AMRestorableSetLogLevel)();
typedef mach_error_t(*tf_AMRestoreCreateBootArgsByAddingArg)();
typedef mach_error_t(*tf_AMRestoreCreateBootArgsByRemovingArg)();
typedef mach_error_t(*tf_AMRestoreCreateDefaultOptions)();
typedef mach_error_t(*tf_AMRestoreCreatePathsForBundle)();
typedef mach_error_t(*tf_AMRestoreDisableFileLogging)();
typedef mach_error_t(*tf_AMRestoreEnableExtraDFUDevices)();
typedef mach_error_t(*tf_AMRestoreEnableFileLogging)();
typedef mach_error_t(*tf_AMRestoreGetSupportedPayloadVersion)();
typedef mach_error_t(*tf_AMRestoreGetTransformedDFUType)();
typedef mach_error_t(*tf_AMRestoreGetTransformedFirmwareTypeValue)();
typedef mach_error_t(*tf_AMRestoreModeDeviceCopyBoardConfig)();
typedef mach_error_t(*tf_AMRestoreModeDeviceCopyEcid)();
typedef mach_error_t(*tf_AMRestoreModeDeviceCopyIMEI)();
typedef mach_error_t(*tf_AMRestoreModeDeviceCopyRestoreLog)();
typedef mach_error_t(*tf_AMRestoreModeDeviceCopySerialNumber)();
typedef mach_error_t(*tf_AMRestoreModeDeviceCreate)();
typedef mach_error_t(*tf_AMRestoreModeDeviceGetDeviceID)();
typedef mach_error_t(*tf_AMRestoreModeDeviceGetLocationID)();
typedef mach_error_t(*tf_AMRestoreModeDeviceGetProgress)();
typedef mach_error_t(*tf_AMRestoreModeDeviceGetTypeID)();
typedef mach_error_t(*tf_AMRestoreModeDeviceReboot)();
typedef mach_error_t(*tf_AMRestoreModeGetLastFailureLog)();
typedef mach_error_t(*tf_AMRestorePerformDFURestore)();
typedef mach_error_t(*tf_AMRestorePerformRecoveryModeRestore)();
typedef mach_error_t(*tf_AMRestorePerformRestoreModeRestore)();
typedef mach_error_t(*tf_AMRestorePerformRestoreModeRestoreWithError)();
typedef mach_error_t(*tf_AMRestoreRegisterForDeviceNotifications)();
typedef mach_error_t(*tf_AMRestoreSetLogLevel)();
typedef mach_error_t(*tf_AMRestoreUnregisterForDeviceNotifications)();
typedef mach_error_t(*tf_AMSArchiveBackup)();
typedef mach_error_t(*tf_AMSBackupWithOptions)();
typedef mach_error_t(*tf_AMSBeginSync)();
typedef mach_error_t(*tf_AMSBeginSyncForDataClasses)();
typedef mach_error_t(*tf_AMSCancelBackupRestore)();
typedef mach_error_t(*tf_AMSCancelCrashReportCopy)();
typedef mach_error_t(*tf_AMSCancelSync)();
typedef mach_error_t(*tf_AMSCancelSyncDiagnostics)();
typedef mach_error_t(*tf_AMSChangeBackupPassword)();
typedef mach_error_t(*tf_AMSCleanup)();
typedef mach_error_t(*tf_AMSClearDataClasses)();
typedef mach_error_t(*tf_AMSConnectToCrashReportCopyTarget)();
typedef mach_error_t(*tf_AMSCopyApplicationListFromBackup)();
typedef mach_error_t(*tf_AMSCopyCrashReportPath)();
typedef mach_error_t(*tf_AMSCopyCrashReportsFromTarget)();
typedef mach_error_t(*tf_AMSCopySourcesForRestoreCompatibleWith)();
typedef mach_error_t(*tf_AMSDisconnectFromCrashReportCopyTarget)();
typedef mach_error_t(*tf_AMSEnableCloudBackup)();
typedef mach_error_t(*tf_AMSEnableSyncServices)();
typedef mach_error_t(*tf_AMSGetAOSUsername)();
typedef mach_error_t(*tf_AMSGetApplicationProviderInfo)();
typedef mach_error_t(*tf_AMSGetBackupInfo)();
typedef mach_error_t(*tf_AMSGetBackupPasswordFromKeychainForTarget)();
typedef mach_error_t(*tf_AMSGetCalendarDayLimit)();
typedef mach_error_t(*tf_AMSGetClientIdentifierAndDisplayNameForTarget)();
typedef mach_error_t(*tf_AMSGetCollectionsForDataClassName)();
typedef mach_error_t(*tf_AMSGetCrashReportCopyPreferencesForTarget)();
typedef mach_error_t(*tf_AMSGetDataChangeAlertInfo)();
typedef mach_error_t(*tf_AMSGetDataClassInfoForTarget)();
typedef mach_error_t(*tf_AMSGetDefaultOutlookCalendarMapping)();
typedef mach_error_t(*tf_AMSGetLastSyncDateForDataClass)();
typedef mach_error_t(*tf_AMSGetNewRecordCalendarName)();
typedef mach_error_t(*tf_AMSGetNewRecordGroupName)();
typedef mach_error_t(*tf_AMSGetNumberOfCrashReportsToCopy)();
typedef mach_error_t(*tf_AMSGetNumberOfCrashReportsToSubmit)();
typedef mach_error_t(*tf_AMSGetSourcesForRestore)();
typedef mach_error_t(*tf_AMSGetSupportedDataClassNames)();
typedef mach_error_t(*tf_AMSInitialize)();
typedef mach_error_t(*tf_AMSIsSyncServicesEnabled)();
typedef mach_error_t(*tf_AMSRefreshCollectionsForDataClassName)();
typedef mach_error_t(*tf_AMSRegisterCallbacks)();
typedef mach_error_t(*tf_AMSRegisterClientWithTargetIdentifierAndDisplayName)();
typedef mach_error_t(*tf_AMSResetSyncData)();
typedef mach_error_t(*tf_AMSRestoreWithApplications)();
typedef mach_error_t(*tf_AMSRunSyncDiagnostics)();
typedef mach_error_t(*tf_AMSSetBackupPasswordInKeychain)();
typedef mach_error_t(*tf_AMSSetCalendarDayLimit)();
typedef mach_error_t(*tf_AMSSetCrashReportCopyPreferencesForTarget)();
typedef mach_error_t(*tf_AMSSetDataChangeAlertInfo)();
typedef mach_error_t(*tf_AMSSetDataClassInfoForTarget)();
typedef mach_error_t(*tf_AMSSetDefaultOutlookCalendarMapping)();
typedef mach_error_t(*tf_AMSSetDesignatedProviderForDataClassName)();
typedef mach_error_t(*tf_AMSSetFilteredCollectionNamesForDataClassName)();
typedef mach_error_t(*tf_AMSSetNewRecordCalendarName)();
typedef mach_error_t(*tf_AMSSetNewRecordGroupName)();
typedef mach_error_t(*tf_AMSSubmitCrashReportsFromTarget)();
typedef mach_error_t(*tf_AMSSubmitRestoreLogFromPath)();
typedef mach_error_t(*tf_AMSUnregisterTarget)();
typedef mach_error_t(*tf_ASRServerHandleConnection)();
typedef mach_error_t(*tf_RCGetSystemPartitionExtrasSizeForDevice)();
typedef mach_error_t(*tf_USBMuxConnectByPort)();
typedef mach_error_t(*tf_USBMuxListenerClose)();
typedef mach_error_t(*tf_USBMuxListenerCreate)();
typedef mach_error_t(*tf_USBMuxListenerSetDebug)();
typedef mach_error_t(*tf_kAFCErrorCodeKey)();
typedef mach_error_t(*tf_kAFCErrorDebugDescriptionKey)();
typedef mach_error_t(*tf_kAFCErrorDescriptionKey)();
typedef mach_error_t(*tf_kAFCErrorDomain)();
typedef mach_error_t(*tf_kAFCErrorDomainKey)();
typedef mach_error_t(*tf_kAFCErrorExtendedInfoKey)();
typedef mach_error_t(*tf_kAFCErrorFileLineKey)();
typedef mach_error_t(*tf_kAFCErrorFileNameKey)();
typedef mach_error_t(*tf_kAFCErrorLocalizedDescriptionKey)();
typedef mach_error_t(*tf_kAFCErrorLocalizedFailureReasonKey)();
typedef mach_error_t(*tf_kAFCErrorLocalizedRecoverySuggestionKey)();
typedef mach_error_t(*tf_kAFCErrorUnderlyingErrorKey)();
typedef mach_error_t(*tf_kAFCErrorVersionKey)();
typedef mach_error_t(*tf_kAFCHeaderKeyHeaderLength)();
typedef mach_error_t(*tf_kAFCHeaderKeyPacketData)();
typedef mach_error_t(*tf_kAFCHeaderKeyPacketID)();
typedef mach_error_t(*tf_kAFCHeaderKeyPacketLength)();
typedef mach_error_t(*tf_kAFCHeaderKeyPacketType)();
typedef mach_error_t(*tf_kAFCHeaderKeySignature)();
typedef mach_error_t(*tf_kAMRestorableInvalidClientID)();
